面向过程：从左向右，从上往下依次执行

面向对象：面向现实

抽象：从同类物体中抽取出    共性的属性和方法，形成类；只需要将当前需要的属性和方法进行描述
	-----程序员将现实物体的描述, 使用计算机语言描述给计算机

数据的抽象：描述物体的属性
过程的抽象：描述物体的行为


对象：独立的个体
类：从同一种的N个对象，抽出的共性的描述

java的类和对象
class修饰的就是类：程序员将物体的概念描述给计算机,是JVM生成对象的模板
对象：对象是实际存在的该类事物的个体，因而也称实例

-------类是对象的抽象，对象是类的实例，对象就是实例--------
--在java中，类是模板，不能直接使用类，而是使用类的生产的对象

对象的生成方法：
类名  对象的引用名  =  new 类名()；

猴子 Monkey
属性：
年龄：int
性别：String
毛色:String
种类:String

行为：
猴子会爬树
猴子会吃
猴子会喝水



成员变量与局部变量

成员变量：定义在类中的是成员变量
1.成员变量JAVA会给予对应类型的初始值
2.成员变量在本类的作用域中都可以使用


局部变量：定义在方法中是局部变量
局部变量必须手动初始化赋值，方可使用
局部变量只能在定义的方法中使用


方法：函数

---------java的命名规范----------
1.项目的命名为全小写
2.包名为全小写   com.项目名.本包名     org.项目名.本包名  
3.类名的首字母大写，后面的每一个单词的首字符大写（帕斯卡命名法） HelloWorld
4.属性的命名：驼峰命名方法  首个单词的全小写，后面的每一个单词的首字符大写 goodTypeName
5.方法的命名同属性的命名
6.不要中英文混杂，命名要望文知义
7.格式良好的java  注释要占50-70%



java的参数传递采用：值传递（传“=”右边的值）


java通过变量的名字（引用名、变量名）， 进行调用，不判断类型--------变量名在同一作用域中不能重复
java通过方法的名字和参数列表   进行调用，不判断返回值类型--------方法名中和参数列表在同一类中不能同时一样

---java允许在同一类中，方法名可以重复，但是同名方法的参数列表必须不同（顺序、个数、类型）；返回值和形参的命名没有影响--

方法的重载（OverLoad）：java多态性的体现，表示是对同一行为的不同的实现
1.在同一类中
2.方法名相同
3.参数列表必须不同（顺序、个数、类型）











