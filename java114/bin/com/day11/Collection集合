Conllection:一组对象元素的集合

子接口:
List:代表的有序,可重复的集合
Set:无序,不可重复的集合
Queue:队列 ---先进先出,后进后出

List:支持下标操作
常用实现类
--ArrayList:可变长数组,一组连续的内存空间,默认初始长度为10,每次扩充50%
	查询和修改效率高,删除和插入效率低,线程不安全
	
LinkedList:双向链表,不光可以作为列表使用,还可以作为队列使用(操作内存)
	查询和修改效率低,删除和插入效率高
	
Vector:	线程安全的ArrayList,效率较低,基本已被ArrayList替代;每次扩充100%
	
	
Set:无序,不可重复;不支持下标操作;放入的顺序不等于取出的顺序
常用实现类
HashSet:由哈希表支持的set集合,除(Integer)外,不会对放入其中的元素进行排序

TreeSet:Set集合的非通用实现,会将放入其中的元素按自然顺序进行排序;采用边放边排
只有具有自然顺序的对象(实现了Comparable接口),方可放入TreeSet

Set判断两个对象相同性的条件
首先判断两个对象的hashCode()方法返回的值是否一致;如不同,Set集合就认为两个对象不相同
如一致,再判断equals方法是否返回true

--hashCode()返回的值一致并且equals方法返回true,Set集合认为两个对象相同--




	
	

范型:运行时类型,通常用于规定放入集合中的元素的类型
1.不接受基本数据类型为泛型

List<String> list = new ArrayList<String>();
