

多态：一种方法的多种实现
1.必须有继承
2.必须父类的引用指向子类的对象（Person p = new Man()）
3.子类必须重写父类的方法

多态应用的基本原则：只使用父类中定义的方法



引用数据之间的相互转化
	1.自动类型转换
	 类型要兼容（extends）
	 子类对象可以自动转换为父类类型(Person p = new Man())
   -------- 并不是将子类的对象变成父类类型的对象，而是当成父类类型使用
   --------java是按等号左边的部分来确定对象的类型，此时，只能使用定义在父类中的方法和属性（但子类对象独有的方法和属性不是消失，而是jvm不知道）
	
   	2.强制类型转换--不安全
   	类型要兼容（extends）
   	父类可以转换为子类类型，----一定要确保实际的对象确实是待转换的目标类型----
	如不是，会出现java.lang.ClassCastException:类型转换异常
	
	
	obj instanceof 类型: 判断一个对象是否是目标类型；或者一个类是否实现了目标接口
	
	
	
	BaseDao
	DaoN:BaseDao中的方法的不同实现
	Factory：工厂，生产不同版本的Dao对象
	ServiceN:代表的是对Dao的调用
	
	
	
	